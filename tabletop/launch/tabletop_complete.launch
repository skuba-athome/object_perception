<launch>
	<!-- This launch file starts, segmentation, recognition. and the database communication node. -->
	<arg name="flatten_table" default="false"/>	
    <arg name="model_set" default="REDUCED_MODEL_SET"/>
	<arg name="tabletop_segmentation_points_input" default="camera/depth/points" />
	<arg name="kinect_robot_connected" default="false" />

	<!-- open kinect or kinect_webcam from robot-->
	<include if="$(arg kinect_robot_connected)"
		file="$(find hardware_bridge)/launch/open_kinect_webcam.launch">
	</include>
	<include unless="$(arg kinect_robot_connected)"
		file="$(find openni_launch)/launch/openni.launch">
	</include>


	<!-- segmentation -->
	<include file="$(find tabletop)/launch/tabletop_segmentation.launch">
	  <arg name="tabletop_segmentation_points_in" value="$(arg tabletop_segmentation_points_input)" />
	  <arg name="flatten_table" value="$(arg flatten_table)"/>
	</include>

	<!-- object recognition -->
	<include file="$(find tabletop)/launch/tabletop_object_recognition.launch">
      	<arg name="model_set" value="$(arg model_set)" />
    </include>

	<!--complete node -->
	<node pkg="tabletop" name="tabletop_complete_node" type="tabletop_complete_node"
	respawn="true" output="screen">
	  <param name="perform_fit_merge" value="true" />
	</node>
	
	<!-- load the database parameters -->
	<rosparam command="load" file="$(find household_objects_database)/config/wgs36.yaml"/>
	<!-- start the database wrapper node -->
	<node pkg="household_objects_database" name="objects_database_node" type="objects_database_node" 
	respawn="true" output="screen"/>
</launch>


